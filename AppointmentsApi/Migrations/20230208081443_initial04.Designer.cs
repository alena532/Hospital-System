// <auto-generated />
using System;
using AppointmentsApi.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppointmentsApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230208081443_initial04")]
    partial class initial04
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AppointmentsApi.DataAccess.Models.Appointment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("Begin")
                        .HasColumnType("time");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DoctorAppointmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("End")
                        .HasColumnType("time");

                    b.Property<Guid>("PatientAppointmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DoctorAppointmentId");

                    b.HasIndex("PatientAppointmentId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("AppointmentsApi.DataAccess.Models.DoctorAppointment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DoctorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DoctorAppointments");
                });

            modelBuilder.Entity("AppointmentsApi.DataAccess.Models.PatientAppointment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PatientAppointments");
                });

            modelBuilder.Entity("AppointmentsApi.DataAccess.Models.Appointment", b =>
                {
                    b.HasOne("AppointmentsApi.DataAccess.Models.DoctorAppointment", "DoctorAppointment")
                        .WithMany("Appointments")
                        .HasForeignKey("DoctorAppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppointmentsApi.DataAccess.Models.PatientAppointment", "PatientAppointment")
                        .WithMany("Appointments")
                        .HasForeignKey("PatientAppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DoctorAppointment");

                    b.Navigation("PatientAppointment");
                });

            modelBuilder.Entity("AppointmentsApi.DataAccess.Models.DoctorAppointment", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("AppointmentsApi.DataAccess.Models.PatientAppointment", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
